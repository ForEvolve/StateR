@using StateR.Validations.FluentValidation;
@inherits StatorComponent
@inject IState<ValidationState> ValidationState

@if (ValidationState.Current.HasErrors())
{
    <div class="alert alert-danger alert-dismissible" role="alert">
        @if (ValidationState.Current.Errors.Count == 1)
        {
            @ValidationState.Current.Errors.First().ErrorMessage
        }
        else
        {
            <ul>
                @foreach (var error in ValidationState.Current.Errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        }
        <button type="button" class="btn-close" aria-label="Close" @onclick="Dismiss"></button>
    </div>
}
@code{
    private async Task Dismiss()
    {
        await DispatchAsync(new CleanValidationError());
    }
}